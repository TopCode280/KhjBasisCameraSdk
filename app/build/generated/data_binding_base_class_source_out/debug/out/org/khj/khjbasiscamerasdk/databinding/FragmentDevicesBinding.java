// Generated by data binding compiler. Do not edit!
package org.khj.khjbasiscamerasdk.databinding;

import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import java.lang.Deprecated;
import java.lang.Object;
import org.khj.khjbasiscamerasdk.R;

public abstract class FragmentDevicesBinding extends ViewDataBinding {
  @NonNull
  public final RelativeLayout emptyView;

  @NonNull
  public final ImageView ivAddNew;

  @NonNull
  public final ImageView ivEmpty;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final SmartRefreshLayout refreshLayout;

  @NonNull
  public final TextView tvMessage;

  @NonNull
  public final TextView tvMessage2;

  protected FragmentDevicesBinding(Object _bindingComponent, View _root, int _localFieldCount,
      RelativeLayout emptyView, ImageView ivAddNew, ImageView ivEmpty, RecyclerView recyclerView,
      SmartRefreshLayout refreshLayout, TextView tvMessage, TextView tvMessage2) {
    super(_bindingComponent, _root, _localFieldCount);
    this.emptyView = emptyView;
    this.ivAddNew = ivAddNew;
    this.ivEmpty = ivEmpty;
    this.recyclerView = recyclerView;
    this.refreshLayout = refreshLayout;
    this.tvMessage = tvMessage;
    this.tvMessage2 = tvMessage2;
  }

  @NonNull
  public static FragmentDevicesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_devices, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDevicesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentDevicesBinding>inflateInternal(inflater, R.layout.fragment_devices, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentDevicesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_devices, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDevicesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentDevicesBinding>inflateInternal(inflater, R.layout.fragment_devices, null, false, component);
  }

  public static FragmentDevicesBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentDevicesBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentDevicesBinding)bind(component, view, R.layout.fragment_devices);
  }
}
